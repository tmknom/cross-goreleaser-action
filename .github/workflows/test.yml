name: Test
on:
  workflow_dispatch:
  pull_request:
    paths: ["action.yml", ".github/workflows/test.yml"]

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

permissions: {}

defaults:
  run:
    shell: bash

env:
  DEFAULT_CONFIG_PATH: .goreleaser.yml

jobs:
  test-configuration-path:
    name: Test for configuration-path
    runs-on: ubuntu-latest
    timeout-minutes: 5
    permissions:
      contents: write
    steps:
      - name: Checkout
        uses: tmknom/checkout-action@v1

      - name: Setup
        id: setup
        run: |
          set -x
          rm -f "${DEFAULT_CONFIG_PATH}"

          config="${RUNNER_TEMP}/.goreleaser.yml"
          cat <<EOF >"${config}"
          version: 2
          builds:
            - main: ./.github/fixtures/main.go
              goos: [linux]
          EOF
          echo "path=${config}" >> "${GITHUB_OUTPUT}"

      - name: Exercise
        id: exercise
        uses: ./
        with:
          configuration-path: ${{ steps.setup.outputs.path }}
          dry-run: "true"

      - name: Verify
        env:
          ARTIFACTS: ${{ steps.exercise.outputs.artifacts }}
          METADATA: ${{ steps.exercise.outputs.metadata }}
          CONFIGURATION_PATH: ${{ steps.exercise.outputs.configuration-path }}
          CONFIGURATION_DIGEST: ${{ steps.exercise.outputs.configuration-digest }}
        run: |
          set -x
          test "$(jq -r '.[] | select (.type=="Metadata") | .name' <<<"${ARTIFACTS}")" = "metadata.json"
          test "$(jq -r '.project_name' <<<"${METADATA}")" = "cross-goreleaser-action"
          test "${CONFIGURATION_PATH}" = "${RUNNER_TEMP}/.goreleaser.yml"
          test "${CONFIGURATION_DIGEST}" = "sha256:a459d888fcc3094e6046b6490b9ee3af0f36703f6a4dc0f05f111353f0177dca"

  test-configuration-url:
    name: Test for configuration-url
    runs-on: ubuntu-latest
    timeout-minutes: 5
    permissions:
      contents: write
    steps:
      - name: Checkout
        uses: tmknom/checkout-action@v1

      - name: Setup
        run: |
          set -x
          rm -f "${DEFAULT_CONFIG_PATH}"

      - name: Exercise
        id: exercise
        uses: ./
        with:
          configuration-url: https://raw.githubusercontent.com/tmknom/cross-goreleaser-action/37a939a4421d377d7a6156214f0f42a83a73d673/.github/fixtures/test.yml
          dry-run: "true"

      - name: Verify
        env:
          CONFIGURATION_PATH: ${{ steps.exercise.outputs.configuration-path }}
          CONFIGURATION_DIGEST: ${{ steps.exercise.outputs.configuration-digest }}
        run: |
          set -x
          [[ "${CONFIGURATION_PATH}" =~ "${RUNNER_TEMP}"/__[^/]*/\.goreleaser\.yml ]]
          test "${CONFIGURATION_DIGEST}" = "sha256:a459d888fcc3094e6046b6490b9ee3af0f36703f6a4dc0f05f111353f0177dca"

  test-omit:
    name: Test for omit
    runs-on: ubuntu-latest
    timeout-minutes: 5
    permissions:
      contents: read
      pull-requests: write
    steps:
      - name: Checkout
        uses: tmknom/checkout-action@v1

      - name: Setup
        run: |
          set -x
          cat <<EOF >"${DEFAULT_CONFIG_PATH}"
          version: 2
          builds:
            - main: ./.github/fixtures/main.go
              goos: [linux]
          EOF

      - name: Exercise
        id: exercise
        uses: ./
        with:
          dry-run: "true"

      - name: Verify
        env:
          CONFIGURATION_PATH: ${{ steps.exercise.outputs.configuration-path }}
          CONFIGURATION_DIGEST: ${{ steps.exercise.outputs.configuration-digest }}
        run: |
          set -x
          test "${CONFIGURATION_PATH}" = ".goreleaser.yml"
          test "${CONFIGURATION_DIGEST}" = "sha256:a459d888fcc3094e6046b6490b9ee3af0f36703f6a4dc0f05f111353f0177dca"

  test-homebrew-tap:
    name: Test for homebrew-tap
    runs-on: ubuntu-latest
    timeout-minutes: 5
    permissions:
      contents: write
      packages: read
      id-token: write
    steps:
      - name: Checkout
        uses: tmknom/checkout-action@v1
        with:
          ref: ${{ github.event.pull_request.user.login == 'dependabot[bot]' && github.event.repository.default_branch || '' }}

      - name: Setup
        id: setup
        run: |
          set -x
          rm -f "${DEFAULT_CONFIG_PATH}"

          config="${RUNNER_TEMP}/.goreleaser.yml"
          cat <<EOF >"${config}"
          version: 2
          builds:
            - main: ./.github/fixtures/main.go
              goos: [darwin]
          brews:
            - repository:
                owner: "{{ .Env.GITHUB_REPOSITORY_OWNER }}"
                name: "{{ .Env.HOMEBREW_TAP_REPOSITORY }}"
                branch: update/{{ .ProjectName }}_{{ .FullCommit }}
                token: "{{ .Env.HOMEBREW_TAP_GITHUB_TOKEN }}"
                pull_request:
                  enabled: true
              commit_author:
                name: github-actions[bot]
                email: 41898282+github-actions[bot]@users.noreply.github.com
              directory: Formula
          EOF
          echo "path=${config}" >> "${GITHUB_OUTPUT}"

      - name: Private Generate GitHub Token
        id: private
        uses: tmknom/private-generate-github-token-action@009082a8acf3aaaf20e06b2a6f0b190191564b6c # v0.3.5
        with:
          repositories: homebrew-test-tap

      - name: Push tag
        id: tag
        env:
          GITHUB_TOKEN: ${{ github.token }}
        run: |
          set -x
          version="v0.0.1-alpha-${GITHUB_SHA}"
          git tag "${version}"
          git push origin "${version}"
          echo "version=${version}" >> "${GITHUB_OUTPUT}"

      - name: Exercise
        id: exercise
        uses: ./
        with:
          configuration-path: ${{ steps.setup.outputs.path }}
          homebrew-tap-repository: homebrew-test-tap
          homebrew-tap-github-token: ${{ steps.private.outputs.token }}

      - name: Verify
        env:
          CONFIGURATION_PATH: ${{ steps.exercise.outputs.configuration-path }}
          CONFIGURATION_DIGEST: ${{ steps.exercise.outputs.configuration-digest }}
        run: |
          set -x
          test "${CONFIGURATION_PATH}" = "${RUNNER_TEMP}/.goreleaser.yml"
          test "${CONFIGURATION_DIGEST}" = "sha256:0c539a4348d80c5b252a2415875c8da26f59ebcb0c91d3c38c4154ce7e8e016f"

      - name: Teardown
        if: ${{ always() }}
        env:
          VERSION: ${{ steps.tag.outputs.version }}
          GITHUB_TOKEN: ${{ github.token }}
        run: |
          set -x
          gh release delete "${VERSION}" --cleanup-tag --yes || true

      - name: Revoke GitHub Token
        if: ${{ always() }}
        uses: tmknom/revoke-github-token-action@9ed4395d40ab1dd9dcd63e33686dc0f8b38ca8b1 # v0.1.2
        with:
          token: ${{ steps.private.outputs.token }}

  test-error:
    name: Test for error
    runs-on: ubuntu-latest
    timeout-minutes: 5
    permissions:
      contents: write
    steps:
      - name: Checkout
        uses: tmknom/checkout-action@v1

      - name: Setup
        run: |
          set -x
          rm -f "${DEFAULT_CONFIG_PATH}"

      - name: Exercise
        id: exercise
        uses: ./
        with:
          dry-run: "true"
        continue-on-error: true

      - name: Verify
        if: ${{ always() }}
        env:
          OUTCOME: ${{ steps.exercise.outcome }}
        run: |
          set -x
          test "${OUTCOME}" = "failure"
